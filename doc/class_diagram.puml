@startuml
Title "Classes in the FEATS"

hide empty members

class payload_t{
  payload[] : character(len=1), allocatable
}

object mailbox{
  payloads : payload_t[]
}

mailbox *-down- payload_t

abstract class task_t{
  {abstract} execute(task_number : integer, upstream_task_results : task_payload_map_t, output : payload_t)
  is_final_task() : logical
}
class task_item_t{
  {abstract} task : task_t
  execute(task_number : integer, upstream_task_results : task_payload_map_t, output : payload_t)
}

task_t -left-> task_payload_map_t : accepts
task_t -left-> mailbox : accepts

task_item_t *-down- task_t
task_item_t -left-> task_payload_map_t : accepts
task_item_t -left-> mailbox : accepts

class dag_t{
}

class application_t{
  dag_ : dag_t
  tasks_ : task_item_t[]
  dag() : dag_t
  tasks() : task_item_t[]
}
note right: inv: size(self%tasks_) == size(self%dag_%num_vertices())
application_t *-down- dag_t
application_t *-down- task_item_t

class image_t{
  run(application : application_t) : task_payload_map_t
}

application_t -left-> image_t : accepts

@enduml
